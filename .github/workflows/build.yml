name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'liberica'
          cache: gradle
      - uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle Wrapper
        run: ./gradlew build
      - name: Build & Publish Docker Image
        run: ./gradlew bootBuildImage --publishImage -PregistryUrl=${{ env.REGISTRY }} -PregistryUsername=${{ github.actor }} -PregistryPassword=${{ secrets.GITHUB_TOKEN }} -PimageVersion=latest
      - name: Send Telegram Notification (for Success)
        if: success()
        uses: appleboy/telegram-action@v1.0.1
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            ‚úÖ The build was successful!
            View the build details here: 
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send Telegram Notification (for Failure)
        if: failure()
        uses: appleboy/telegram-action@v1.0.1
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            ‚ùå The build failed.
            Please check the logs for details.
            View the build details here:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        id: deploy_step
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          capture_stdout: true
          script: |
            cd /opt/deployment/chat-genie
            docker compose up --pull=always --detach chat-genie api-gateway
      - name: Notify Telegram
        if: always()
        uses: appleboy/telegram-action@v1.0.1
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            üéâ Deployment result:
            ```sh
            ${{ steps.deploy_step.outputs.stdout }}
            ```   

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'liberica'
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
